apply plugin: 'stringfog'
apply plugin: 'AndResGuard'



// 导入RandomKeyGenerator类，如果使用HardCodeKeyGenerator，更换下类名
import com.github.megatronking.stringfog.plugin.kg.RandomKeyGenerator
import com.github.megatronking.stringfog.plugin.StringFogMode

	
stringfog {
    
    implementation 'com.github.megatronking.stringfog.xor.StringFogImpl'
    
    //packageName 'com.github.megatronking.stringfog.app'
    
    enable true

    fogPackages = ['com.github.debacodex']
    

    kg new RandomKeyGenerator()
    
    mode StringFogMode.bytes
}

android {
     namespace 'com.github.debacodex'
     compileSdk 30
    defaultConfig {
       applicationId "com.github.debacodex"
       minSdk 23
       targetSdk 30
       versionCode 1
       versionName "1.0"
    }
	
signingConfigs {
        release {
            storeFile file("release_key.jks")
            storePassword "debashis"
            keyAlias "debashis"
            keyPassword "debashis"
        }
        debug {
            storeFile file("debug.keystore")
        }
    }
	
	
buildTypes {
        debug {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
            signingConfig signingConfigs.debug
        }
        
        release {
            minifyEnabled true
            shrinkResources true
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
            signingConfig signingConfigs.release
        }
    }

    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_8
        targetCompatibility JavaVersion.VERSION_1_8
    }
    lintOptions {
        abortOnError false
    }
}

dependencies {
    implementation fileTree(dir: "libs", include: ["*.jar"])
    implementation 'androidx.appcompat:appcompat:1.3.1'
	implementation 'com.google.android.material:material:1.4.0'
    implementation 'androidx.constraintlayout:constraintlayout:2.0.1'
	implementation 'com.github.hackware1993:MagicIndicator:1.7.0' // for androidx
    implementation 'com.github.bumptech.glide:glide:4.15.1'
    implementation 'com.google.firebase:firebase-auth:19.3.2'
    implementation 'com.google.android.gms:play-services-auth:18.1.0'
    implementation 'com.google.firebase:firebase-database:19.5.1'
    implementation 'com.android.volley:volley:1.2.1'
    implementation 'com.google.firebase:firebase-messaging:20.1.0'
    implementation 'androidx.constraintlayout:constraintlayout:2.1.0'
	implementation 'com.github.megatronking.stringfog:xor:4.0.1'
	//implementation 'com.github.megatronking.stringfog:interface:4.0.1'
}
//apply plugin  'com.google.gms.google-services'
andResGuard {
  //   mappingFile =  file("./resource_mapping.txt")
    mappingFile = null
    use7zip = false
    useSign = true
    // It will keep the origin path of your resources when it's true
    keepRoot = false
    // If set, name column in arsc those need to proguard will be kept to this value
    fixedResName = "arg"
    // It will merge the duplicated resources, but don't rely on this feature too much.
    // it's always better to remove duplicated resource from repo
    mergeDuplicatedRes = true
    whiteList = [
	    // for your icon
        "R.drawable.icon",
        "R.mipmap.ic_launcher",
        "R.mipmap.ic_launcher_round",
        "R.mipmap.ic_launcher_foreground",
   
        // 保持所有ID不被混淆
        "R.id.*",
        // 保持自定义view名称
        "R.layout.*",
        // 保持anim名称
        "R.anim.*",
        // 保持color名称  
        "R.color.*",
        // 保持style名称
        "R.style.*",
        // 保持attr名称
        "R.attr.*"
    ]
    compressFilePattern = [
        "*.png",
        "*.jpg",
        "*.jpeg",
        "*.gif",
		"resources.arsc"
    ]
    sevenzip {
        artifact = 'com.github.Leon406.AndResGuard:SevenZip:1.2.20'
            // path = "/storage/emulated/0/ A hack File/7z2501-arm64.exe"
    
    }

    /**
    * Optional: if finalApkBackupPath is null, AndResGuard will overwrite final apk
    * to the path which assemble[Task] write to
    **/
     //finalApkBackupPath = "${project.rootDir}/final.apk"

    /**
    * Optional: Specifies the name of the message digest algorithm to user when digesting the entries of JAR file
    * Only works in V1signing, default value is "SHA-1"
    **/
   // digestalg = "SHA-256"
}
